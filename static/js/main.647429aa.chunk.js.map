{"version":3,"sources":["components/pro-clock.js","context/timezone.js","pages/current-time.js","pages/stopwatch.js","pages/timer.js","pages/counter.js","pages/setting.js","routes.js","layouts/default-layout.js","context/theme.js","App.js","reportWebVitals.js","index.js"],"names":["ProClock","props","format","interval","tz","timezone","TimezoneContext","React","createContext","SetTimezoneContext","TimezoneProvider","children","useState","setTimezone","Provider","value","useTimezone","useContext","CurrentTime","className","Title","level","type","Stopwatch","time","setTime","isStart","setIsStart","updateTime","useRef","stop","clearInterval","current","useEffect","toString","length","slice","timeStyle","size","icon","PauseOutlined","CaretRightOutlined","onClick","setInterval","prevTime","danger","UndoOutlined","Timer","countDownInterval","placeholder","showNow","onChange","timeString","prev","moment","subtract","Counter","state","number","defaultNumber","counter","plus","setState","mines","this","Component","Setting","routes","path","component","exact","tzList","momentTimezone","names","name","Item","label","defaultValue","showSearch","map","item","index","Option","Footer","Layout","Content","DefaultLayout","title","subTitle","extra","to","ClockCircleOutlined","FieldTimeOutlined","PlusCircleOutlined","SettingOutlined","route","key","style","textAlign","Text","ThemeContext","ThemeProvider","theme","setTheme","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.647429aa.chunk.js","sourcesContent":["import React from 'react';\nimport ReactMoment from 'react-moment';\n\nfunction ProClock(props) {\n\n  return (\n      <ReactMoment\n          format={props.format || 'HH:mm:ss'}\n          interval={props.interval || 1000}\n          tz={props.timezone || ''}\n      />\n  );\n}\n\nexport default ProClock;","import React from 'react';\n\nconst TimezoneContext = React.createContext(null);\nconst SetTimezoneContext = React.createContext(null);\n\nexport const TimezoneProvider = ({children}) => {\n  const [timezone, setTimezone] = React.useState('Europe/Amsterdam');\n\n  return (\n      <TimezoneContext.Provider value={timezone}>\n        <SetTimezoneContext.Provider value={setTimezone}>\n          {children}\n        </SetTimezoneContext.Provider>\n      </TimezoneContext.Provider>);\n};\n\nexport const useTimezone = () => React.useContext(TimezoneContext);\nexport const useSetTimezone = () => React.useContext(SetTimezoneContext);","import React from 'react';\nimport ProClock from '../components/pro-clock';\nimport {Typography} from 'antd';\nimport {useTimezone} from '../context/timezone';\n\nfunction CurrentTime() {\n  let timezone = useTimezone();\n\n  return (\n      <div>\n        <span className='full-size'>\n          <ProClock timezone={timezone} interval={1000}/>\n        </span>\n        <Typography.Title level={5} type=\"secondary\"\n                          className=\"controller\">[Timezone: {timezone}]</Typography.Title>\n      </div>\n  );\n}\n\nexport default CurrentTime;","import React from 'react';\nimport {Button, Space} from 'antd';\nimport {CaretRightOutlined, PauseOutlined, UndoOutlined} from '@ant-design/icons';\n\nfunction Stopwatch() {\n  const [time, setTime] = React.useState(0);\n  const [isStart, setIsStart] = React.useState(false);\n  const updateTime = React.useRef();\n\n  React.useEffect(() => {\n\n    return () => {\n      clearInterval(updateTime.current);\n    };\n  }, []);\n\n  function toggle() {\n    if (isStart) {\n      stop();\n    } else {\n      start();\n    }\n  }\n\n  function start() {\n    if (!isStart) {\n      updateTime.current = setInterval(() => {\n        setTime((prevTime) => prevTime + 1);\n      }, 10);\n\n      setIsStart(true);\n    }\n  }\n\n  function stop() {\n    clearInterval(updateTime.current);\n    setIsStart(false);\n  }\n\n  function reset() {\n    stop();\n    setTime(0);\n  }\n\n  function timeStyle(time) {\n    time = time.toString();\n\n    while (time.length < 4) {\n      time = '0' + time;\n    }\n\n    time = time.slice(0, time.length - 2) +\n        '.' +\n        time.toString().slice(time.length - 2, time.length);\n\n    return time;\n  }\n\n  return (\n      <>\n        <div className='full-size'>\n          {timeStyle(time)}\n        </div>\n\n        <Space size={-1} className='controller'>\n          <Button\n              size=\"large\"\n              icon={isStart ? <PauseOutlined/> : <CaretRightOutlined/> }\n              type=\"primary\"\n              onClick={toggle}\n          />\n          <Button\n              size=\"large\"\n              type=\"primary\"\n              danger\n              icon={<UndoOutlined />}\n              onClick={reset}\n          />\n        </Space>\n      </>\n  );\n}\n\nexport default Stopwatch;","import React from 'react';\nimport {TimePicker, Button, Space} from 'antd';\nimport moment from 'moment';\nimport {\n  CaretRightOutlined,\n  PauseOutlined,\n} from '@ant-design/icons';\n\nfunction Timer() {\n  const [time, setTime] = React.useState('00:00:00');\n  const [isStart, setIsStart ] = React.useState(false);\n  const countDownInterval = React.useRef();\n\n  function onChange(time, timeString) {\n    if (timeString === '') {\n      timeString = '00:00:00';\n    }\n    setTime(timeString);\n  }\n\n  function start() {\n    setIsStart(true);\n    countDownInterval.current = setInterval(() => {\n      setTime(\n          (prev) => {\n            if (prev === '00:00:00') {\n              clearInterval(countDownInterval.current);\n              setIsStart(false);\n              return '00:00:00';\n            }\n            return moment(prev, 'HH:mm:ss')\n            .subtract(1, 'seconds')\n            .format('HH:mm:ss');\n          },\n      );\n    }, 1000);\n  }\n\n  function pause() {\n    setIsStart(false);\n    clearInterval(countDownInterval.current);\n  }\n\n  return (\n      <>\n        <div className='full-size'>\n          {time}\n        </div>\n\n        <Space size={-1} className='controller'>\n          <TimePicker\n              size=\"large\"\n              placeholder=\"Add time\"\n              showNow={false}\n              onChange={onChange}\n          />\n          <Button\n              size=\"large\"\n              type=\"primary\"\n              icon={ isStart ? <PauseOutlined/> : <CaretRightOutlined/>}\n              onClick={isStart ? pause : start}\n              danger={isStart}\n          />\n        </Space>\n\n      </>\n  );\n}\n\nexport default Timer;","import React from 'react';\n\nclass Counter extends React.Component {\n\n  // constructor(props) {\n  //   super(props);\n  //\n  //   this.state = {\n  //     number: 0,\n  //     counter: 0\n  //   }\n  //\n  //   this.plus = this.plus.bind(this);\n  //   this.mines = this.mines.bind(this);\n  // }\n  //\n  // plus() {\n  //   this.setState({\n  //     number: ++this.state.number,\n  //     counter: ++this.state.counter\n  //   });\n  // }\n  //\n  // mines() {\n  //   this.setState({\n  //     number: --this.state.number,\n  //     counter: ++this.state.counter\n  //   });\n  // }\n\n  state = {\n    number: this.props.defaultNumber || 0,\n    counter: 0,\n  };\n\n  plus = () => {\n    this.setState({\n      number: this.state.number + 1,\n      counter: this.state.counter + 1,\n    });\n  };\n\n  mines = () => {\n    this.setState({\n      number: this.state.number - 1,\n      counter: this.state.counter + 1,\n    });\n  };\n\n  render() {\n    return (\n        <>\n          <h4>Counter</h4>\n          <h4>Number: {this.state.number}</h4>\n          <h4>Counter: {this.state.counter}</h4>\n          <button onClick={this.plus}>+</button>\n          <button onClick={this.mines}>-</button>\n        </>\n    );\n  }\n}\n\nexport default Counter;","import React from 'react';\nimport {Select, Form} from 'antd';\nimport momentTimezone from 'moment-timezone';\nimport {useTimezone, useSetTimezone} from '../context/timezone';\n\nfunction Setting() {\n  const timezone = useTimezone();\n  const setTimezone = useSetTimezone();\n  const tzList = momentTimezone.tz.names();\n\n  function handleChangeTimezone(value) {\n    setTimezone(value);\n  }\n\n  return (\n      <Form name=\"setting\">\n        <Form.Item label=\"Timezone\">\n          <Select defaultValue={timezone}\n                  onChange={handleChangeTimezone}\n                  showSearch\n          >\n            {tzList.map((item, index) => (\n                <Select.Option key={index} value={item}>{item}</Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Form>\n  );\n}\n\nexport default Setting;","import CurrentTime from \"./pages/current-time\";\nimport Stopwatch from \"./pages/stopwatch\";\nimport Timer from \"./pages/timer\";\nimport Counter from \"./pages/counter\";\nimport Setting from \"./pages/setting\";\n\nconst routes = [\n  {path: '/', component: CurrentTime, exact: true},\n  {path: '/stopwatch', component: Stopwatch},\n  {path: '/timer', component: Timer},\n  {path: '/counter', component: Counter},\n  {path: '/setting', component: Setting},\n];\n\nexport default routes;","import {Layout, PageHeader, Button, Space, Typography} from 'antd';\nimport routes from '../routes';\nimport {Link, Route} from 'react-router-dom';\nimport {\n  SettingOutlined,\n  ClockCircleOutlined,\n  FieldTimeOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport React from 'react';\n\nconst {Footer, Content} = Layout;\n\nlet DefaultLayout = () => {\n\n  return (\n      <Layout>\n        <PageHeader\n            className=\"site-page-header\"\n            title=\"Simple Clock\"\n            subTitle=\"With some simple actions\"\n            extra={\n\n              <Space size={3}>\n                <Link to='/'>\n                  <Button key=\"current\" icon={<ClockCircleOutlined/>}\n                          size=\"large\"/>\n                </Link>\n                <Link to='/timer'>\n                  <Button key=\"timer\" icon={<FieldTimeOutlined/>} size=\"large\"/>\n                </Link>\n                <Link to='/stopwatch'>\n                  <Button key=\"stopwatch\" icon={<PlusCircleOutlined/>}\n                          size=\"large\"/>\n                </Link>\n                <Link to='/setting'>\n                  <Button key=\"setting\" icon={<SettingOutlined/>} size=\"large\"/>\n                </Link>\n              </Space>\n\n            }\n        />\n        <Content className=\"site-layout-content\">\n          {routes.map((route, index) => (\n                  <Route {...route} key={index}/>\n              ),\n          )}\n        </Content>\n        <Footer style={{textAlign: 'center'}}>\n          <Typography.Text type=\"secondary\">BE HAPPY FOR THIS MOMENT, THIS\n            MOMENT IS YOUR LIFE.</Typography.Text>\n        </Footer>\n      </Layout>\n  );\n\n};\n\nexport default DefaultLayout;","import React from 'react';\n\nexport const ThemeContext = React.createContext(null);\n\nexport const ThemeProvider = ({children}) => {\n  const [theme, setTheme] = React.useState('light');\n\n  return (\n      <ThemeContext.Provider value={[theme, setTheme]}>\n        {children}\n      </ThemeContext.Provider>);\n};","import React from 'react';\nimport './App.css';\nimport {HashRouter as Router} from 'react-router-dom';\nimport DefaultLayout from './layouts/default-layout';\nimport {TimezoneProvider} from './context/timezone';\nimport {ThemeProvider} from './context/theme';\n\nfunction App() {\n\n  return (\n      <ThemeProvider>\n        <TimezoneProvider>\n          <Router>\n            <DefaultLayout/>\n            {/*  TODO: Add route for auth pages*/}\n          </Router>\n        </TimezoneProvider>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}